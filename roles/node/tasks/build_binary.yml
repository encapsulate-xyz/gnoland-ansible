---
- name: Ensure tmp directory exists
  ansible.builtin.file:
    path: "{{ tmp_dir }}"
    state: directory
    mode: "1777"

- name: Clone the repository to /tmp
  ansible.builtin.git:
    repo: "{{ vars[project][type].source_url }}"
    dest: "{{ tmp_dir }}/{{ project }}"
    version: "{{ vars[project][type].version }}"
    force: true

- name: Build Gnoland and Gnokey binaries
  ansible.builtin.shell: |
    go build -ldflags "-w -s" -o build/gnoland ./gno.land/cmd/gnoland
    go build -ldflags "-w -s" -o build/gnokey ./gno.land/cmd/gnokey
  args:
    chdir: "{{ tmp_dir }}/{{ project }}"
    executable: /bin/bash
  environment:
    PATH: "{{ go.root }}/bin:{{ ansible_env.PATH }}"
    GOROOT: "{{ go.root }}"
    GOPATH: "{{ go.path }}"
    GO111MODULE: "{{ go.module111 }}"

- name: Copy built binaries to the target directory
  ansible.builtin.copy:
    src: "{{ tmp_dir }}/{{ project }}/build/{{ item.src }}"
    dest: "{{ node_bin_dir }}/{{ item.dest }}"
    mode: "0755"
    owner: root
    group: root
    remote_src: true
    force: true
  loop:
    - src: "{{ node_service_default_binary_name }}"
      dest: "{{ service_identifier }}"
    - src: "{{ node_key_default_binary_name }}"
      dest: "{{ service_identifier }}-key"
  notify:
    - Restart service

- name: Copy gnovm to the target directory
  ansible.builtin.copy:
    src: "{{ tmp_dir }}/{{ project }}/gnovm"
    dest: "{{ node_home_dir }}"
    mode: "0755"
    owner: root
    group: root
    remote_src: true
    force: true
  notify:
    - Restart service

- name: Clean up the temporary repository directory
  ansible.builtin.file:
    path: "{{ tmp_dir }}/{{ project }}"
    state: absent
